#ifndef _BSP_RTC_H_
#define _BSP_RTC_H_




/****************************************************************************************
* 文 件： 
* 功 能：RTC和时钟相关底层处理函数
* 函 数： 1，SysTick 初始化            SysTick_Ini



****************************************************************************************/

#define     TIM_50MS (0x01<<0)
#define     TIM_KEY_500MS (0x01<<1)//按键按下500s任务计时
#define     TIM_BT_UART_5MS (0x01<<2)//蓝牙串口接收任务处理
#define     TIM_SLEEP_1000MS (0x01<<3)//休眠秒任务
#define     TIM_FP_ENROLL_1000MS (0x01<<4)//指纹录入
#define     TIM_TASK_MANAGE_1000MS (0x01<<5)//任务执行时间
#define     TIM_RFID_100MS (0x01<<6)//rfid检测时间
#define     TIM_TIME_500MS (0x01<<7)//刷新时间
#define     TIM_CONFIG_KEY_1000MS (0x01<<8)//配置按键时间
#define     TIM_HAL_50MS (0x01<<9)//霍尔检测
#define     TIM_KEY_DEL_50MS (0x01<<10)//按键按压延时
#define     TIM_KEY_READ_10MS (0x01<<11)//按键按压任务时间
typedef struct t_DateTime {
  int year; 
	int month;  
	int day;  
  int hour; 
	int minute;  
	int second;
} _DateTime;


 typedef enum{
	Leap_Year,
	Common_year
}Year_Enum;
/****************************************************************************************
* 函 数： RTC_SetDate2Seconds
* 功 能： 根据当前时间设置转换为秒数
****************************************************************************************/
unsigned int  RTC_SetDate2Seconds(_DateTime nTime);
/****************************************************************************************
* 函数:SysTick_Ini
* 描述:SysTick初始化，1ms
****************************************************************************************/
void SysTick_Ini(void);
/****************************************************************************************
* 函数:SysTick_write_cnt
* 描述:SysTick时间计数
****************************************************************************************/
void SysTick_write_cnt(void);
/****************************************************************************************
* 函 数： SysTick_read_cnt
* 功 能： 读取时间片段状态
****************************************************************************************/
unsigned char  SysTick_read_cnt(unsigned short type);
/****************************************************************************************
* 函 数： RTC_Ini
* 功 能： rtc初始化
****************************************************************************************/
void RTC_Ini(void);
/****************************************************************************************
* 函 数： RTC_Ini
* 功 能： rtc初始化
****************************************************************************************/
void RTC_Set(unsigned long seconds);
/****************************************************************************************
* 函 数： RTC_Ini
* 功 能： rtc初始化
****************************************************************************************/
void RTC_Get(void);
/****************************************************************************************
* 函 数： RTC_Date2Seconds
* 功 能： 根据当前时间，转换为秒数
****************************************************************************************/
unsigned int  RTC_Date2Seconds(void);
/****************************************************************************************
* 函 数： RTC_Seconds2Date
* 功 能： 根据当前秒数，转换为时间
****************************************************************************************/
_DateTime RTC_Seconds2Date(unsigned long seconds);//获取国芯的秒，再转换时间,但是没有年和月

_DateTime RTC_GuoXin2Date(void);//获取国芯的秒，再转换时间

_DateTime RTC_GB_Seconds2Date(unsigned long seconds);//秒转换为标准时间

int RTC_getHour(unsigned short CNT, unsigned char year_res);


#endif

